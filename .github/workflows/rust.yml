name: Build
permissions:
  contents: write
on: [push]
jobs:
  build:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}

    # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name: linux-x64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build_name: polli-live
          - name: win-x64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            build_name: polli-live.exe
          - name: macos-x64
            runner: macos-latest
            target: x86_64-apple-darwin
            build_name: polli-live
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            build_name: polli-live

    # The steps to run for each matrix item
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Test
        run: cargo test --verbose --locked --release --target ${{ matrix.target }}

      - name: Rename Executable
        run: cp ./target/${{ matrix.target }}/release/${{ matrix.build_name }} polli-live-${{ matrix.name }}

      - uses: actions/upload-artifact@v4
        with:
          name: polli-live-${{ matrix.name }}
          path: polli-live-${{ matrix.name }}

  deploy:
    name: Deploy Latest
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
      - uses: softprops/action-gh-release@v2
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "Development Build"
          files: polli-live-*/*
          prerelease: true
          tag_name: "latest"
